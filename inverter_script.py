#!/usr/bin/env python

import os
## For the given path, get the List of all files in the directory tree 

def getListOfFiles(dirName):
    # create a list of file and sub directories 
    # names in the given directory 
    listOfFile = os.listdir(dirName)
    allFiles = list()
    # Iterate over all the entries
    for entry in listOfFile:
        # Create full path
        fullPath = os.path.join(dirName, entry)
        # If entry is a directory then get the list of files in this directory 
        if os.path.isdir(fullPath):
            allFiles = allFiles + getListOfFiles(fullPath)
        else:
            allFiles.append(fullPath)

    return allFiles        


def main():
    dirName = '/work_bgfs/i/iliabautista/2-Research/2-Simulations/1-HDL/veriloga/modelfiles/';
    # Get the list of all files in directory tree at given path
    full_path_files = getListOfFiles(dirName)

    models_files  = [files.replace(dirName, '').replace('nfet.pm', '').replace('/', '_') for files in full_path_files]
    models_files_dir = [model for model in models_files if "pfet.pm"  not in model]

    cir_files = list()
    lines_models = list()
    for cir_file_r in models_files_dir: 
        cir_file = "".join(reversed(cir_file_r.split("_")))
        cir_files.append(cir_file)

    uut = 'test'
    uut_names = [uut + '_' + item for item in models_files_dir]
    dir_paths = [uut + '/' + item for item in uut_names]
    dir_paths.insert(0,uut)

    for names in dir_paths:
        try:
            os.mkdir(names)
        except OSError:
            print ("Subdirectory %s already exists. Try deleting it with 'rm -r uut_name' and starting fresh." % names)
        else:
            print ("Successfully created the directory %s " % names)

    writing = 0
    for item, cir_file in zip(dir_paths[1:],cir_files):
        # Creates a new file 
        with open(item + "/" + cir_file, 'w+') as subckt: 
            subckt.write("$This subckt was automatically generated by:\n")
            subckt.write("$" + os.getcwd() + "/" + __file__ + "\n")
            with open('models') as models:
                for line in models:
                    if ("Example" not in line) & (cir_file in line) & (writing == 0):
                        writing = 1
                        subckt.write(line)
                    elif (cir_file in line) & (writing == 1):
                        subckt.write(line)
                        writing = 0
                    elif (writing == 1):
                        subckt.write(line)
                    else:
                        pass
 

if __name__ == '__main__':
    main()

